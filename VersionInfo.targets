<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!-- generates assembly info based on git tags -->
	<PropertyGroup>
		<ProjectVersion Condition="'$(ProjectVersion)' == ''">0.2.0</ProjectVersion>
		<GitExe Condition="Exists('$(ProgramFiles32)\git\bin\git.exe')">"$(ProgramFiles32)\git\bin\git.exe"</GitExe>
		<GitExe Condition="Exists('$(ProgramFiles)\git\bin\git.exe')">"$(ProgramFiles)\git\bin\git.exe"</GitExe>
		<GitExe Condition="Exists('$(ProgramFiles) (x86)\git\bin\git.exe')">"$(ProgramFiles) (x86)\git\bin\git.exe"</GitExe>
		<GitExe Condition="'$(GitExe)' == ''">git.exe</GitExe>
		
		<GeneratedAssemblyInfo>$(IntermediateOutputPath)__versioninfo.cs</GeneratedAssemblyInfo>
		<GitVersionCache>$(IntermediateOutputPath)__gitlastknown</GitVersionCache>
	</PropertyGroup>

	<Target Name="GetGitVersionInfo">
		<Error Condition="'$(GitExe)' == ''" Text="Git.exe cannot be found" />
		
		<MakeDir Directories="$(IntermediateOutputPath)" ContinueOnError="true" />
		<ReadLinesFromFile File="$(GitVersionCache)" ContinueOnError="true">
			<Output TaskParameter="Lines" PropertyName="_LastGitVersion"/>
		</ReadLinesFromFile>
		<Exec Command="$(GitExe) log --pretty=format:%%h -1 &gt; $(GitVersionCache)" IgnoreExitCode="false" />
		<ReadLinesFromFile File="$(GitVersionCache)" ContinueOnError="true">
			<Output TaskParameter="Lines" PropertyName="_CurrentGitVersion"/>
		</ReadLinesFromFile>
	</Target>

	<!--
		assembly info is only regenerated if the git repo changes
		this speeds up local builds considerably
	-->
	<Target Name="CreateAssemblyInfoFromGit" Condition=" '$(_CurrentGitVersion)' != '$(_LastGitVersion)' Or '$(Configuration)' == 'Release' ">
		<Delete Files="$(GeneratedAssemblyInfo)" />
		<WriteLinesToFile File="$(GeneratedAssemblyInfo)" Overwrite="true"
						  Lines="
[assembly: System.Reflection.AssemblyFileVersion(&quot;$(ProjectVersion)&quot;)]
[assembly: System.Reflection.AssemblyVersion(&quot;$(ProjectVersion)&quot;)]
[assembly: System.Reflection.AssemblyInformationalVersion(&quot;$(ProjectVersion)-$(_CurrentGitVersion)&quot;)]
" />
	</Target>

	<Target Name="BeforeBuild" DependsOnTargets="GetGitVersionInfo;CreateAssemblyInfoFromGit" Condition="'$(ProjectVersion)' != ''">
		<Error Condition="!Exists('$(GeneratedAssemblyInfo)')" Text="The version info file is missing, although it should have been generated by the previous step." />
		<CreateItem Include="$(GeneratedAssemblyInfo)">
			<Output TaskParameter="Include" ItemName="Compile"/>
		</CreateItem>
	</Target>

	<Target Name="BeforeClean">
		<Delete Files="$(GeneratedAssemblyInfo);$(GitVersionCache)" ContinueOnError="true" />
	</Target>
</Project>