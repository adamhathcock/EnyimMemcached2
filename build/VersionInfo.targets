<Project ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<UsingTask TaskName="ParseVersionNumber" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<AssemblyInfoPath ParameterType="System.String" Required="true"/>
			<Version ParameterType="System.String" Output="true" />
		</ParameterGroup>
		<Task>
			<Reference Include="System" />
			<Reference Include="System.IO" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					var content = File.ReadAllText(AssemblyInfoPath);
					var match = System.Text.RegularExpressions.Regex.Match(content, @"\[assembly\: AssemblyVersion\(""(?'V'\d+\.\d+\.\d+)""\)");
					if (!match.Success) throw new InvalidOperationException("Cannot parse version info from " + AssemblyInfoPath);
					Version = match.Groups["V"].ToString();
				]]>
			</Code>
		</Task>
	</UsingTask>

	<!-- override project version -->
	<!--<PropertyGroup>
		<ProjectVersion>4.0.0</ProjectVersion>
	</PropertyGroup>-->

	<!-- internals -->
	<PropertyGroup>
		<BuildDependsOn>_GetGitVersionInfo;_CreateAssemblyInfoFromGit;_AddVersion;$(BuildDependsOn)</BuildDependsOn>
		<CleanDependsOn>_DeleteVersionCache;$(CleanDependsOn)</CleanDependsOn>
		<GeneratedAssemblyInfo>$([System.IO.Path]::Combine($(IntermediateOutputPath), '__versioninfo.cs'))</GeneratedAssemblyInfo>
		<GitVersionCache>$([System.IO.Path]::Combine($(IntermediateOutputPath), '__gitlastknown'))</GitVersionCache>

		<BuildNumber>0</BuildNumber>
		<BuildNumber Condition=" '$(APPVEYOR_BUILD_NUMBER)' != '' ">$(APPVEYOR_BUILD_NUMBER)</BuildNumber>
	</PropertyGroup>

	<!-- try to run git to get a commit hash -->
	<PropertyGroup Condition=" '$(CommitId)' == '' ">
		<GitExe Condition=" Exists('$(ProgramFiles32)\git\bin\git.exe')     ">"$(ProgramFiles32)\git\bin\git.exe"</GitExe>
		<GitExe Condition=" Exists('$(ProgramFiles)\git\bin\git.exe')       ">"$(ProgramFiles)\git\bin\git.exe"</GitExe>
		<GitExe Condition=" Exists('$(ProgramFiles) (x86)\git\bin\git.exe') ">"$(ProgramFiles) (x86)\git\bin\git.exe"</GitExe>

		<!-- git is not installed :( -->
		<CommitId Condition=" '$(GitExe)' == '' ">local</CommitId>
	</PropertyGroup>

	<!--
		this will generate obj\__gitlastknown with a comit hash (unless we already have it from somewhere)

		output:
		  $_LastGitVersion: previous hash
		  $CommitId: current hash
	-->
	<Target Name="_GetGitVersionInfo" Condition=" '$(CommitId)' == '' ">
		<MakeDir Directories="$(IntermediateOutputPath)" ContinueOnError="true" />
		<ReadLinesFromFile File="$(GitVersionCache)" ContinueOnError="true">
			<Output TaskParameter="Lines" PropertyName="_LastGitVersion"/>
		</ReadLinesFromFile>
		<Exec Command="$(GitExe) log --pretty=format:%%h -1 &gt; $(GitVersionCache)" IgnoreExitCode="false" />
		<ReadLinesFromFile File="$(GitVersionCache)" ContinueOnError="true">
			<Output TaskParameter="Lines" PropertyName="CommitId"/>
		</ReadLinesFromFile>
	</Target>

	<Target Name="_ParseVersion" Condition=" '$(ProjectVersion)' == '' ">
		<ParseVersionNumber AssemblyInfoPath="$(SolutionDir)\AssemblyInfo.cs">
			<Output TaskParameter="Version" PropertyName="ProjectVersion"/>
		</ParseVersionNumber>
	</Target>

	<!--
		assembly info is only regenerated if the git repo changes
		this speeds up local builds considerably
	-->
	<Target Name="_CreateAssemblyInfoFromGit"
			Condition=" '$(CommitId)' != '$(_LastGitVersion)' Or '$(Configuration)' == 'Release' "
			DependsOnTargets="_ParseVersion">
		<MakeDir Directories="$(IntermediateOutputPath)" ContinueOnError="true" />
		<Message Text="Version: $(ProjectVersion)" Importance="normal" />
		<Message Text="Commit: $(CommitId)" Importance="normal" />

		<Delete Files="$(GeneratedAssemblyInfo)" />
		<WriteLinesToFile File="$(GeneratedAssemblyInfo)" Overwrite="true"
						  Lines="
[assembly: System.Reflection.AssemblyFileVersion(&quot;$(ProjectVersion).$(BuildNumber)&quot;)]
[assembly: System.Reflection.AssemblyInformationalVersion(&quot;$(ProjectVersion).$(BuildNumber)-$(CommitId)&quot;)]
" />
	</Target>

	<Target Name="_AddVersion">
		<Message Text="Git not found" Importance="high" Condition=" '$CommitId)' == 'local' "/>
		<CreateItem Include="$(GeneratedAssemblyInfo)">
			<Output TaskParameter="Include" ItemName="Compile"/>
		</CreateItem>
	</Target>

	<Target Name="_DeleteVersionCache">
		<Delete Files="$(GeneratedAssemblyInfo);$(GitVersionCache)" ContinueOnError="true" />
	</Target>
</Project>

<!--

	Copyright (c) Attila KiskÃ³, enyim.com

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.

-->
